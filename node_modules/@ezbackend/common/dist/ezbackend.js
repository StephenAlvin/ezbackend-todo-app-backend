"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.EzBackend = void 0;
var typeorm_1 = require("typeorm");
var ezapp_1 = require("./ezapp");
var utils_1 = require("@ezbackend/utils");
var fastify_1 = __importDefault(require("fastify"));
var core_1 = require("@ezbackend/core");
var dedent_js_1 = __importDefault(require("dedent-js"));
var dotenv_1 = __importDefault(require("dotenv"));
var fastify_plugin_1 = __importDefault(require("fastify-plugin"));
//TODO: Check if emojis will break instance names
//URGENT TODO: Strict types for instance, opts
function addErrorSchema(instance, opts) {
    return __awaiter(this, void 0, void 0, function () {
        return __generator(this, function (_a) {
            instance.server.addSchema({
                "$id": "ErrorResponse",
                type: 'object',
                properties: {
                    statusCode: { type: 'number' },
                    error: { type: 'string' },
                    message: { type: 'string' }
                }
            });
            return [2 /*return*/];
        });
    });
}
//URGENT TODO: Make running this optional in the default config
dotenv_1.default.config();
var defaultConfig = {
    listen: {
        port: process.env.PORT || 8000,
        address: process.env.ADDRESS || "127.0.0.1",
    },
    fastify: {
        logger: {
            prettyPrint: {
                translateTime: "SYS:HH:MM:ss",
                ignore: "pid,hostname,reqId,responseTime,req,res",
                //@ts-ignore
                messageFormat: function (log, messageKey, levelLabel) {
                    var _a, _b, _c, _d;
                    var method = (_a = log.req) === null || _a === void 0 ? void 0 : _a.method;
                    var url = (_b = log.req) === null || _b === void 0 ? void 0 : _b.url;
                    var status = (_c = log.res) === null || _c === void 0 ? void 0 : _c.statusCode;
                    var resTime = (_d = log.responseTime) === null || _d === void 0 ? void 0 : _d.toFixed(2);
                    var msg = log[messageKey];
                    if (method && url) {
                        return "".concat("[".concat(method, " ").concat(url).padEnd(25, '.'), "] ").concat(msg);
                    }
                    if (status && resTime) {
                        return "".concat("[".concat(status, " ").concat(resTime, "ms").padEnd(25, '.'), "] ").concat(msg);
                    }
                    return msg;
                },
            },
        },
    },
    typeorm: {
        type: "better-sqlite3",
        database: "tmp/db.sqlite",
        synchronize: true
    }
};
// Derived from https://github.com/jeromemacias/fastify-boom/blob/master/index.js
// Kudos to him
var ezbErrorPage = function (fastify, options, next) {
    //TODO: Strict types for error
    fastify.setErrorHandler(function errorHandler(error, request, reply) {
        request.log.error(error);
        if (error && error.query) {
            //Assumption: It is a typeorm error if it falls here
            request.log.error("query: ".concat(error.query));
            request.log.error("parameters: ".concat(error.parameters));
            request.log.error("driverError: ".concat(error.driverError));
        }
        if (error && error.isBoom) {
            reply
                .code(error.output.statusCode)
                .type('application/json')
                .headers(error.output.headers)
                .send(error.output.payload);
            return;
        }
        reply.send(error || new Error("Got non-error: ".concat(error)));
    });
    next();
};
/**
 * Child of EzApp. This is where you set up your backend setup tasks.
 */
var EzBackend = /** @class */ (function (_super) {
    __extends(EzBackend, _super);
    function EzBackend() {
        var _this = _super.call(this) || this;
        _this.setDefaultOpts(defaultConfig);
        _this.setInit('Create Entities Container', function (instance, opts) { return __awaiter(_this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                instance.entities = [];
                return [2 /*return*/];
            });
        }); });
        _this.setPostInit('Create Database Connection', function (instance, opts) { return __awaiter(_this, void 0, void 0, function () {
            var ormOpts, optionEntities, _a;
            var _b, _c;
            return __generator(this, function (_d) {
                switch (_d.label) {
                    case 0:
                        ormOpts = (_b = opts.orm) !== null && _b !== void 0 ? _b : (_c = this.getOpts('backend', opts)) === null || _c === void 0 ? void 0 : _c.typeorm;
                        if (ormOpts.entities) {
                            (0, utils_1.ezWarning)("Defining your own entities outside of the EzBackend orm wrapper may result in unexpected interactions. The EzBackend orm wrapper provides the full capability of typeorm so that should be used instead.");
                        }
                        optionEntities = (ormOpts === null || ormOpts === void 0 ? void 0 : ormOpts.entities) ? ormOpts.entities : [];
                        _a = instance;
                        return [4 /*yield*/, (0, typeorm_1.createConnection)(__assign(__assign({}, ormOpts), { entities: __spreadArray(__spreadArray([], optionEntities, true), instance.entities, true) }))];
                    case 1:
                        _a.orm = _d.sent();
                        return [2 /*return*/];
                }
            });
        }); });
        _this.setHandler('Add Fastify Boom', function (instance, opts) { return __awaiter(_this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                instance.server.register((0, fastify_plugin_1.default)(ezbErrorPage));
                return [2 /*return*/];
            });
        }); });
        _this.setHandler('Add Error Schema', addErrorSchema);
        _this.setPostHandler('Create Fastify Server', function (instance, opts) { return __awaiter(_this, void 0, void 0, function () {
            var fastifyOpts;
            var _a, _b;
            return __generator(this, function (_c) {
                fastifyOpts = (_a = opts.server) !== null && _a !== void 0 ? _a : (_b = this.getOpts('backend', opts)) === null || _b === void 0 ? void 0 : _b.fastify;
                instance._server = (0, fastify_1.default)(fastifyOpts);
                return [2 /*return*/];
            });
        }); });
        _this.setPostHandler('Register Fastify Plugins', function (instance, opts) { return __awaiter(_this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                this.registerFastifyPlugins(instance._server, this);
                return [2 /*return*/];
            });
        }); });
        _this.setRun('Run Fastify Server', function (instance, opts) { return __awaiter(_this, void 0, void 0, function () {
            var listenOpts, port, address, backlog;
            var _a, _b;
            return __generator(this, function (_c) {
                switch (_c.label) {
                    case 0:
                        listenOpts = this.getOpts('backend', opts);
                        port = (_a = opts.port) !== null && _a !== void 0 ? _a : listenOpts === null || listenOpts === void 0 ? void 0 : listenOpts.listen.port;
                        address = (_b = opts.address) !== null && _b !== void 0 ? _b : listenOpts === null || listenOpts === void 0 ? void 0 : listenOpts.listen.address;
                        backlog = listenOpts === null || listenOpts === void 0 ? void 0 : listenOpts.listen.backlog;
                        return [4 /*yield*/, instance._server.listen(port, address, backlog)];
                    case 1:
                        _c.sent();
                        return [2 /*return*/];
                }
            });
        }); });
        _this.scope = core_1.PluginScope.PARENT;
        return _this;
    }
    EzBackend.prototype.getInternalInstance = function () {
        //TODO: Figure if there is a better way of getting this data
        //@ts-ignore
        var lastPlugin = this.instance._lastUsed;
        if (lastPlugin === null) {
            throw new Error("Server is still undefined, have you called app.start() yet?");
        }
        return lastPlugin.server;
    };
    EzBackend.prototype.getInternalServer = function () {
        return this.getInternalInstance()._server;
    };
    EzBackend.prototype.inject = function (injectOpts) {
        return __awaiter(this, void 0, void 0, function () {
            var server;
            return __generator(this, function (_a) {
                server = this.getInternalServer();
                return [2 /*return*/, server.inject(injectOpts)];
            });
        });
    };
    EzBackend.prototype.verifyStarted = function (funcName) {
        if (!this.instance.started) {
            var additionalMsg = funcName
                ? "before running ".concat(funcName)
                : '';
            throw new utils_1.EzError("Instance not yet started", "The EzBackend instance must be started ".concat(additionalMsg), (0, dedent_js_1.default)(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n                await app.start()\n\n                You must wait for the above function to finish before you can run ", "\n                "], ["\n                await app.start()\n\n                You must wait for the above function to finish before you can run ", "\n                "])), funcName));
        }
    };
    EzBackend.prototype.printRoutes = function () {
        this.verifyStarted("printRoutes");
        return this.getInternalServer().printRoutes();
    };
    EzBackend.prototype.printPlugins = function () {
        this.verifyStarted("printPlugins");
        return this.getInternalServer().printPlugins();
    };
    EzBackend.prototype.prettyPrint = function () {
        this.verifyStarted("prettyPrint");
        return this.instance.prettyPrint();
    };
    //URGENT TODO: Remove temporary any fix
    EzBackend.prototype.start = function (opts) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, _super.prototype.start.call(this, opts)];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    return EzBackend;
}(ezapp_1.EzApp));
exports.EzBackend = EzBackend;
var templateObject_1;
//# sourceMappingURL=ezbackend.js.map