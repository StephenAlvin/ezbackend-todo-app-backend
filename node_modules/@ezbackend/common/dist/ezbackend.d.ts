/// <reference types="node" />
import { Connection, EntitySchema, ObjectLiteral, Repository, createConnection } from "typeorm";
import { EzApp, EzBackendServer } from "./ezapp";
import fastify, { FastifyInstance } from "fastify";
import { InjectOptions } from "light-my-request";
export interface EzBackendInstance {
    entities: Array<EntitySchema>;
    server: EzBackendServer;
    _server: FastifyInstance;
    repo: Repository<ObjectLiteral>;
    orm: Connection;
}
export declare type RecursivePartial<T> = {
    [P in keyof T]?: RecursivePartial<T[P]>;
};
export interface EzBackendOpts {
    /**
     * @deprecated Instead of {address: 0.0.0.0}
     * use
     * {ezbackend: {listen: {address: 0.0.0.0}}}
     */
    address: string;
    /**
     * @deprecated Instead of {port: 8000}
     * use
     * {ezbackend: {listen: {port: 8000}}}
     */
    port: string | number;
    /**
     * @deprecated Instead of {orm: ormOpts}
     * use
     * {ezbackend: {typeorm: ormOpts}}
     */
    orm: Parameters<typeof createConnection>[0];
    /**
     * @deprecated Instead of {server: serverOpts}
     * use
     * {ezbackend: {fastify: serverOpts}}
     */
    server: Parameters<typeof fastify>[0];
    backend: {
        listen: {
            address: string | number;
            port: number | string;
            backlog?: number;
        };
        fastify: Parameters<typeof fastify>[0];
        typeorm: Parameters<typeof createConnection>[0];
    };
}
/**
 * Child of EzApp. This is where you set up your backend setup tasks.
 */
export declare class EzBackend extends EzApp {
    constructor();
    getInternalInstance(): EzBackendInstance;
    getInternalServer(): FastifyInstance<import("http").Server, import("http").IncomingMessage, import("http").ServerResponse, import("fastify").FastifyLoggerInstance>;
    inject(injectOpts: string | InjectOptions): Promise<import("light-my-request").Response>;
    verifyStarted(funcName?: string): void;
    printRoutes(): string;
    printPlugins(): string;
    prettyPrint(): string;
    start(opts?: RecursivePartial<EzBackendOpts>): Promise<void>;
}
