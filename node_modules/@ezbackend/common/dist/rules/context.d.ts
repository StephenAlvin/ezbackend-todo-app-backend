import { InsertEvent, LoadEvent, RemoveEvent, UpdateEvent } from "typeorm";
export declare enum REALTIME {
    RULE_CONTEXT = "RULE_CONTEXT",
    REQ_CONTEXT = "REQ_CONTEXT",
    SOCKET_CONTEXT = "SOCKET_CONTEXT",
    IGNORE_RULES = "IGNORE_RULES"
}
export interface AllowedValues {
    [REALTIME.RULE_CONTEXT]: LoadEvent<any> | UpdateEvent<any> | InsertEvent<any> | RemoveEvent<any>;
    [REALTIME.IGNORE_RULES]: boolean;
    [REALTIME.REQ_CONTEXT]: any;
    [REALTIME.SOCKET_CONTEXT]: any;
}
export declare function ignoreRules(): void;
export declare function setContext<T extends REALTIME>(key: T, value: AllowedValues[T]): void;
export declare function getContext<T extends REALTIME>(key: T): AllowedValues[T] | undefined;
